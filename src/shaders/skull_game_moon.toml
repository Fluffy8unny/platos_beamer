
name = "skull_game_moon_shader"

vertex="""
     #version 330

      in vec2 position;
      in vec2 uv;
      in float blend_value;
      in float texture_id;
      
      out vec2 v_uv_coords;
      out float v_blend_value;
      out float v_texture_id;

      void main() {
          v_uv_coords = uv;
          v_blend_value = blend_value;
          v_texture_id = texture_id;
          gl_Position = vec4(position, 0.0, 1.0);
      }
     """ 

fragment="""
      #version 330  

      in vec2 v_uv_coords;
      in vec3 v_color;
      in float v_texture_id;

      uniform float time;
      uniform sampler2D moon_texture;
      uniform sampler2D moon_mask;
      
      out float v_blend_value;
      out vec4 frag_color;
  
      void main(){ 
           float luminosity = texture(moon_texture, 1.0-v_uv_coords).r;
           float noise = texture(moon_mask, v_uv_coords).r;
           float mask = texture(moon_mask, v_uv_coords).g;

           float stepMin = time;
           float stepMax = stepMin + 0.05;
           float stepBorderMid = stepMin + 0.02;
           float stepBorderEnd = stepMin + 0.04;
           float mixSmooth = mask * (1.0 - smoothstep(stepMin, stepMax, noise));
            
           vec3 color = luminosity* vec3(1.0, time,time);
           vec3 colorOverlay = vec3(0.8, 0.2, 0.0);
           vec3 colorBorder = vec3(1.0, 0.2, 0.0);
           float mixBorder = mask * (1.0 - max(
                1.0 - smoothstep(stepMin, stepBorderMid, noise),
                1.0 - smoothstep(stepBorderEnd, stepBorderMid, noise)
            ));          

            vec3 final = mix(color, color * colorOverlay, mixSmooth);
            final = mix(final, colorBorder, mixBorder);

           frag_color =  vec4(final.xyz,mask);
         }
      """
